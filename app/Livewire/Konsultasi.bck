<?php

namespace App\Livewire;

use App\Models\Dokter;
use Livewire\Component;
use App\Models\Transaksi;
use Livewire\Attributes\On;
use App\Models\Konsultasi as KonsultasiModel;

class Konsultasi extends Component
{
    public $chat;
    public $dokter_id;

    public function mount($id)
    {
        $this->dokter_id = $id;
    }

    #[On('chatAdded')]
    public function render()
    {
        if (auth()->user()->role == 'dokter') {
            return view('livewire.konsultasi', [
                'konsultasi' => KonsultasiModel::where('dokter_id', auth()->user()->dokter->id)
                    ->orderBy('id', 'asc')
                    ->get(),
            ]);
        } else {
            return view('livewire.konsultasi', [
                'konsultasi' => KonsultasiModel::where('dokter_id', $this->dokter_id)
                    ->where('user_id', auth()->user()->id)
                    ->orderBy('id', 'asc')
                    ->get(),
            ]);
        }
    }

    public function kirim()
    {
        if (isset(auth()->user()->transaksi) && auth()->user()->transaksi->status == 'Menunggu') {
            flash('Silahkan melakukan pembayaran terlebih dahulu', 'error');
            return redirect('/konsultasi');
        } elseif (isset(auth()->user()->transaksi) && auth()->user()->transaksi->status == 'Tidak Valid') {
            flash('Pembayaran anda tidak valid', 'error');
            return redirect('/konsultasi');
        }

        if (empty($this->chat)) {
            flash('Pesan tidak boleh kosong', 'error');
        } else {
            $kode = rand(100000, 999999);
            $lastKonsultasi = KonsultasiModel::where('status', 'Menunggu')->latest()->first();
            if ($lastKonsultasi) {
                $lastKonsultasi2 = KonsultasiModel::where('kode', $lastKonsultasi->kode)->latest()->first();
            }
            // dd($lastKonsultasi);
            if (!$lastKonsultasi) {
                KonsultasiModel::create([
                    'user_id' => auth()->user()->id,
                    'dokter_id' => $this->dokter_id,
                    'kode' => $kode,
                    'chat' => $this->chat,
                    'status' => 'Menunggu',
                ]);
            } elseif ($lastKonsultasi->user_id != auth()->user()->id) {
                $kode = $lastKonsultasi->kode;
                KonsultasiModel::create([
                    'user_id' => auth()->user()->id,
                    'dokter_id' => $this->dokter_id,
                    'kode' => $kode,
                    'chat' => $this->chat,
                    'status' => 'Live',
                ]);
            } elseif ($lastKonsultasi->user_id == auth()->user()->id && $lastKonsultasi2->status == 'Live') {
                $kode = $lastKonsultasi->kode;
                KonsultasiModel::create([
                    'user_id' => auth()->user()->id,
                    'dokter_id' => $this->dokter_id,
                    'kode' => $kode,
                    'chat' => $this->chat,
                    'status' => 'Live',
                ]);
            }

            $this->chat = null;

            $this->dispatch('chatAdded');
        }
    }
}
